name = "pike-local-market"
version = "0.1.0"
description = "Local markets for Pike mainnet fork deployment"
include = ["testnet.toml"]
# override with mainnet values and mock oracle for test

[setting.usdc]
defaultValue = "<%= contracts.WETH.address %>"

[setting.weth]
defaultValue = "<%= contracts.USDC.address %>"

[contract.MockOracle]
artifact = "MockOracle"

[contract.WETH]
artifact = "MockToken"
args = ["Wrapped Ether", "WETH", "18"]

[contract.USDC]
artifact = "MockToken"
args = ["USD Coin", "USDC", "6"]

[invoke.set_oracle]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.owner %>"
func = "setOracle"
args = ["<%= contracts.MockOracle.address %>"]

[invoke.set_eth_price]
target = [ "MockOracle" ]
func = "setPrice"
args = ["<%= pWETH.Proxy.address %>", "<%= parseUnits('2000', 6) %>", "18"]

[invoke.set_usdc_price]
target = [ "MockOracle" ]
func = "setPrice"
args = ["<%= pUSDC.Proxy.address %>", "<%= parseUnits('1', 6) %>", "6"]

[invoke.support_pWETH]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.owner %>"
func = "supportMarket"
args = ["<%= pWETH.Proxy.address %>"]
depends = [ "invoke.set_eth_price" ]

[invoke.support_pUSDC]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.owner %>"
func = "supportMarket"
args = ["<%= pUSDC.Proxy.address %>"]
depends = [ "invoke.set_usdc_price" ]