name = "pike-local-market"
version = "0.1.1"
description = "Local markets for Pike mainnet fork deployment"
# override with mainnet values and mock oracle for test

[var.owner]
owner = "0x8da29648bd3bbef6f0cc1C0b3a9a286ED14E2963"

[contract.InitialModuleBundle]
artifact = "InitialModuleBundle"

[contract.DoubleJumpRateModel]
artifact = "DoubleJumpRateModel"

[contract.RBACModule]
artifact = "RBACModule"

[contract.PTokenModule]
artifact = "PTokenModule"

[contract.RiskEngineModule]
artifact = "RiskEngineModule"

[contract.OracleEngine]
artifact = "OracleEngine"

#PToken
[router.PTokenRouter]
contracts = [
    "InitialModuleBundle",
    "DoubleJumpRateModel",
    "RBACModule",
    "PTokenModule",
]

#Core
[router.CoreRouter]
contracts = [
    "InitialModuleBundle",
    "RBACModule",
    "RiskEngineModule",
]

[clone.core]
source = "pike-upgradeable-proxy:0.1.0@main"
options.implementation = "<%= contracts.CoreRouter.address %>"
options.owner = "<%= settings.owner %>"
options.abi = "<%= JSON.stringify(contracts.CoreRouter.abi) %>"

[clone.pToken]
source = "pike-upgradeable-proxy:0.1.0@main"
options.implementation = "<%= contracts.PTokenRouter.address %>"
options.owner = "<%= settings.owner %>"
options.abi = "<%= JSON.stringify(contracts.PTokenRouter.abi) %>"

[contract.ChainlinkOracleProvider]
artifact = "ChainlinkOracleProvider"
args = ["<%= settings.owner %>"]

[contract.PythOracleProvider]
artifact = "PythOracleProvider"
args = ["<%= settings.owner %>"]

[clone.oracleEngine]
source = "pike-upgradeable-proxy:0.1.0@oz"
options.implementation = "<%= contracts.OracleEngine.address %>"
options.owner = "<%= settings.owner %>"
options.abi = "<%= JSON.stringify(contracts.OracleEngine.abi) %>"
options.salt = "oracleEngine"

[clone.pythOracleProvider]
source = "pike-upgradeable-proxy:0.1.0@oz"
options.implementation = "<%= contracts.PythOracleProvider.address %>"
options.owner = "<%= settings.owner %>"
options.abi = "<%= JSON.stringify(contracts.PythOracleProvider.abi) %>"
options.salt = "pythOracleProvider"

[clone.chainlinkOracleProvider]
source = "pike-upgradeable-proxy:0.1.0@oz"
options.implementation = "<%= contracts.ChainlinkOracleProvider.address %>"
options.owner = "<%= settings.owner %>"
options.abi = "<%= JSON.stringify(contracts.ChainlinkOracleProvider.abi) %>"
options.salt = "chainlinkOracleProvider"

[setting.weth]
weth_address = "<%= contracts.WETH.address %>"

[contract.WETH]
artifact = "MockToken"
args = ["Wrapped Ether", "WETH", "18"]