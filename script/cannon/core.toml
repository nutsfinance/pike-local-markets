[contract.InitialModuleBundle]
artifact = "InitialModuleBundle"

[contract.DoubleJumpRateModel]
artifact = "DoubleJumpRateModel"

[contract.RBACModule]
artifact = "RBACModule"

[contract.PTokenModule]
artifact = "PTokenModule"

[contract.RiskEngineModule]
artifact = "RiskEngineModule"

[contract.OracleEngine]
artifact = "OracleEngine"

#PToken
[router.PTokenRouter]
contracts = [
    "InitialModuleBundle",
    "DoubleJumpRateModel",
    "RBACModule",
    "PTokenModule",
]

#Core
[router.CoreRouter]
contracts = [
    "InitialModuleBundle",
    "RBACModule",
    "RiskEngineModule",
]

[clone.core]
source = "pike-upgradeable-proxy:0.1.0@main"
options.implementation = "<%= contracts.CoreRouter.address %>"
options.owner = "<%= settings.core_owner %>"
options.abi = "<%= JSON.stringify(contracts.CoreRouter.abi) %>"

[invoke.set_oracle]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "setOracle"
args = ["<%= oracleEngine.Proxy.address %>"]
depends = ["invoke.set_core_configurator"]

[invoke.set_close_factor]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "setCloseFactor"
args = ["<%= settings.core_closeFactor %>"]
depends = ["invoke.set_core_configurator"]

[invoke.set_core_configurator]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RBACModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "grantPermission"
args = ["<%= settings.roles_confRole %>", "<%= settings.core_configurator %>"]

[invoke.set_core_pause_guard]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RBACModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "grantPermission"
args = ["<%= settings.roles_pauseGuardRole %>", "<%= settings.core_pauseGuard %>"]

[invoke.set_liquidation_incentive]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "setLiquidationIncentive"
args = ["<%= settings.core_incentives %>"]
depends = ["invoke.set_core_configurator"]