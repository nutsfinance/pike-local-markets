name = "pike-token"
version = "0.1.0"
description = "Pike token deployment with initialization"

[var.owner]
owner = "0x8da29648bd3bbef6f0cc1C0b3a9a286ED14E2963"

[var.roles]
reserveManagerRole = "0x524553455256455f4d414e414745520000000000000000000000000000000000"
reserveWithdrawerRole = "0x524553455256455f574954484452415745520000000000000000000000000000"
confRole = "0x434f4e464947555241544f520000000000000000000000000000000000000000"
supGuardRole = "0x535550504c595f4341505f475541524449414e00000000000000000000000000"
borGuardRole = "0x424f52524f575f4341505f475541524449414e00000000000000000000000000"
pauseGuardRole = "0x50415553455f475541524449414e000000000000000000000000000000000000"

[var.salt]
salt = "main"

[var.address]
underlying = "<%= AddressZero %>"
riskEngine = "<%= AddressZero %>"
core = "<%= AddressZero %>"

[var.access]
reserveManager = "<%= AddressZero %>"
configurator = "<%= AddressZero %>"
reserveWithdrawer = "<%= AddressZero %>"

[var.irm]
baseRate = "0"
multiplier = "0"
firstJumpMultiplier = "0"
secondJumpMultiplier= "0"
firstKink = "0"
secondKink = "0"

[var.params]
initial_exchange_rate = "0"
reserve_factor = "0"
protocol_seize_factor = "0"
max_borrow_rate = "0"
name = "pToken"
symbol = "P"
decimals = "18"


[var.configurator]

[contract.InitialModuleBundle]
artifact = "InitialModuleBundle"

[contract.DoubleJumpRateModel]
artifact = "DoubleJumpRateModel"

[contract.RBACModule]
artifact = "RBACModule"

[contract.PTokenModule]
artifact = "PTokenModule"

[router.PTokenRouter]
contracts = [
    "InitialModuleBundle",
    "DoubleJumpRateModel",
    "RBACModule",
    "PTokenModule",
]

[clone.pToken]
source = "pike-upgradeable-proxy:0.1.0@main"
options.implementation = "<%= contracts.PTokenRouter.address %>"
options.owner = "<%= settings.owner %>"
options.abi = "<%= JSON.stringify(contracts.PTokenRouter.abi) %>"
options.salt = "<%= settings.salt %>"

# [invoke.chainlink_set_usdc]
# target = ["chainlinkOracleProvider.Proxy"]
# func = "setAssetConfig"
# from = "<%= settings.chainlinkProvider_owner %>"
# args = ["<%= settings.usdc_address %>", "<%= settings.usdc_chainlinkFeed %>", "<%= settings.usdc_maxStale %>"]
# depends = [ "invoke.initialize_chainlink"]

# [invoke.pyth_set_usdc]
# target = ["pythOracleProvider.Proxy"]
# func = "setAssetConfig"
# from = "<%= settings.pythProvider_owner %>"
# args = ["<%= settings.usdc_address %>", "<%= settings.usdc_pythID %>", "<%= settings.usdc_maxStale %>"]
# depends = [ "invoke.initialize_pyth"]

# [invoke.oe_set_usdc]
# target = ["oracleEngine.Proxy"]
# func = "setAssetConfig"
# from = "<%= settings.oracleEngine_owner %>"
# args = ["<%= settings.usdc_address %>", "<%= chainlinkOracleProvider.Proxy.address %>", "<%= pythOracleProvider.Proxy.address %>", "0", "0"]
# depends = [ "invoke.pyth_set_usdc", "invoke.chainlink_set_usdc"]

[invoke.initialize_pToken]
target = [ "pToken.Proxy" ]
abi = "<%= JSON.stringify(contracts.PTokenModule.abi) %>"
from = "<%= settings.owner %>"
func = "initialize"
args = ["<%= settings.underlying %>", "<%= settings.riskEngine %>", "<%= settings.initial_exchange_rate %>", "<%= settings.reserve_factor %>", "<%= settings.protocol_seize_factor %>", "<%= settings.max_borrow_rate %>", "<%= settings.name %>", "<%= settings.symbol %>", "<%= settings.decimals %>"]
depends = [ "clone.pToken" ]

[invoke.set_reserve_manager]
target = [ "pToken.Proxy" ]
abi = "<%= JSON.stringify(contracts.RBACModule.abi) %>"
from = "<%= settings.owner %>"
func = "grantPermission"
args = ["<%= settings.reserveManagerRole %>", "<%= settings.reserveManager %>"]
depends = [ "clone.pToken" ]

[invoke.set_reserve_withdrawer]
target = [ "pToken.Proxy" ]
abi = "<%= JSON.stringify(contracts.RBACModule.abi) %>"
from = "<%= settings.owner %>"
func = "grantPermission"
args = ["<%= settings.reserveWithdrawerRole %>", "<%= settings.reserveWithdrawer %>"]
depends = [ "clone.pToken" ]

[invoke.set_local_configurator]
target = [ "pToken.Proxy" ]
abi = "<%= JSON.stringify(contracts.RBACModule.abi) %>"
from = "<%= settings.owner %>"
func = "grantPermission"
args = ["<%= settings.confRole %>", "<%= settings.configurator %>"]
depends = [ "clone.pToken" ]

[invoke.config_IRM]
target = [ "pToken.Proxy" ]
abi = "<%= JSON.stringify(contracts.DoubleJumpRateModel.abi) %>"
from = "<%= settings.owner %>"
func = "configureInterestRateModel"
args = ["<%= settings.baseRate %>", "<%= settings.multiplier %>", "<%= settings.firstJumpMultiplier %>", "<%= settings.secondJumpMultiplier %>", "<%= settings.firstKink %>", "<%= settings.secondKink %>"]
depends = [ "clone.pToken", "invoke.set_local_configurator" ]

[invoke.set_core_supply_guard]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RBACModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "grantNestedPermission"
args = ["<%= settings.supGuardRole %>", "<%= pToken.Proxy.address %>", "<%= settings.supplyGuard %>"]
depends = [ "clone.pToken" ]

[invoke.set_core_borrow_guard]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RBACModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "grantNestedPermission"
args = ["<%= settings.borGuardRole %>", "<%= pToken.Proxy.address %>", "<%= settings.borrowGuard %>"]

[invoke.set_core_configurator]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RBACModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "grantNestedPermission"
args = ["<%= settings.confRole %>", "<%= pToken.Proxy.address %>","<%= settings.configurator %>"]

[invoke.support_pToken]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.configurator %>"
func = "supportMarket"
args = ["<%= pToken.Proxy.address %>"]
depends = ["invoke.set_core_configurator"]

[invoke.set_collateral_factor]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.core_owner %>"
func = "setCollateralFactor"
args = ["<%= pToken.Proxy.address %>", "<%= settings.maxLTV %>", "<%= settings.LLTV %>"]
depends = [ "invoke.support_pToken" ]

[invoke.set_borrow_cap]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.borrowGuard %>"
func = "setMarketBorrowCaps"
args = [["<%= pToken.Proxy.address %>"], ["<%= settings.borrowCap %>"]]
depends = [ "invoke.set_core_borrow_guard" ]

[invoke.set_supply_cap]
target = [ "core.Proxy" ]
abi = "<%= JSON.stringify(contracts.RiskEngineModule.abi) %>"
from = "<%= settings.supplyGuard %>"
func = "setMarketSupplyCaps"
args = [["<%= pToken.Proxy.address %>"], ["<%= settings.supplyCap %>"]]
depends = [ "invoke.set_core_supply_guard" ]


